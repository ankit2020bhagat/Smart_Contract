{
  "contractName": "Named",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Owner.sol\":\"Named\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Owner.sol\":{\"keccak256\":\"0xcc54b5d64f47a1bc210feceb842ffdaf83811243e75d5e6815e53ca2a88bf163\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://403dafbc116d3e478eb9fb6556ef2d312a61e9d0873b73d9b5a2a55dee85c2be\",\"dweb:/ipfs/QmPM5XZcVjr3kKRbLBWcSzmCDNPyJrmANpyBArPgcJVrjR\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610752380380610752833981810160405281019061003291906101db565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073d5f9d8d94886e70b06e474c3fb14fd43e2f2397090508073ffffffffffffffffffffffffffffffffffffffff16630a874df660016040518263ffffffff1660e01b81526004016100c5919061023d565b602060405180830381600087803b1580156100df57600080fd5b505af11580156100f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011791906101b2565b73ffffffffffffffffffffffffffffffffffffffff1663e1fa8e84836040518263ffffffff1660e01b815260040161014f9190610222565b600060405180830381600087803b15801561016957600080fd5b505af115801561017d573d6000803e3d6000fd5b5050505050506102de565b600081519050610197816102b0565b92915050565b6000815190506101ac816102c7565b92915050565b6000602082840312156101c457600080fd5b60006101d284828501610188565b91505092915050565b6000602082840312156101ed57600080fd5b60006101fb8482850161019d565b91505092915050565b61020d8161026a565b82525050565b61021c8161029e565b82525050565b60006020820190506102376000830184610204565b92915050565b60006020820190506102526000830184610213565b92915050565b600061026382610274565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102a982610294565b9050919050565b6102b981610258565b81146102c457600080fd5b50565b6102d08161026a565b81146102db57600080fd5b50565b610465806102ed6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806383197ef01461003b5780638da5cb5b14610045575b600080fd5b610043610063565b005b61004d6101ca565b60405161005a9190610351565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100bb57600080fd5b600073d5f9d8d94886e70b06e474c3fb14fd43e2f2397090508073ffffffffffffffffffffffffffffffffffffffff16630a874df660016040518263ffffffff1660e01b815260040161010e919061036c565b602060405180830381600087803b15801561012857600080fd5b505af115801561013c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016091906102ca565b73ffffffffffffffffffffffffffffffffffffffff1663e79a198f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101a757600080fd5b505af11580156101bb573d6000803e3d6000fd5b505050506101c76101ee565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027390610387565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000815190506102c481610418565b92915050565b6000602082840312156102dc57600080fd5b60006102ea848285016102b5565b91505092915050565b6102fc816103ca565b82525050565b61030b81610406565b82525050565b600061031e600c836103a7565b91507f4f6e6c79204d616e6167657200000000000000000000000000000000000000006000830152602082019050919050565b600060208201905061036660008301846102f3565b92915050565b60006020820190506103816000830184610302565b92915050565b600060208201905081810360008301526103a081610311565b9050919050565b600082825260208201905092915050565b60006103c3826103dc565b9050919050565b60006103d5826103dc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610411826103fc565b9050919050565b610421816103b8565b811461042c57600080fd5b5056fea2646970667358221220962cdf2627a732610eef7099eb22575323f8cfa45260636875daeebf56b0f1c764736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806383197ef01461003b5780638da5cb5b14610045575b600080fd5b610043610063565b005b61004d6101ca565b60405161005a9190610351565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100bb57600080fd5b600073d5f9d8d94886e70b06e474c3fb14fd43e2f2397090508073ffffffffffffffffffffffffffffffffffffffff16630a874df660016040518263ffffffff1660e01b815260040161010e919061036c565b602060405180830381600087803b15801561012857600080fd5b505af115801561013c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016091906102ca565b73ffffffffffffffffffffffffffffffffffffffff1663e79a198f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101a757600080fd5b505af11580156101bb573d6000803e3d6000fd5b505050506101c76101ee565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027390610387565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000815190506102c481610418565b92915050565b6000602082840312156102dc57600080fd5b60006102ea848285016102b5565b91505092915050565b6102fc816103ca565b82525050565b61030b81610406565b82525050565b600061031e600c836103a7565b91507f4f6e6c79204d616e6167657200000000000000000000000000000000000000006000830152602082019050919050565b600060208201905061036660008301846102f3565b92915050565b60006020820190506103816000830184610302565b92915050565b600060208201905081810360008301526103a081610311565b9050919050565b600082825260208201905092915050565b60006103c3826103dc565b9050919050565b60006103d5826103dc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610411826103fc565b9050919050565b610421816103b8565b811461042c57600080fd5b5056fea2646970667358221220962cdf2627a732610eef7099eb22575323f8cfa45260636875daeebf56b0f1c764736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2414:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:4",
                "type": ""
              }
            ],
            "src": "7:143:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "219:80:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "229:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "238:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "238:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "229:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "287:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "260:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:33:4"
                }
              ]
            },
            "name": "abi_decode_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "197:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "205:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "213:5:4",
                "type": ""
              }
            ],
            "src": "156:143:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "382:207:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "428:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "437:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "440:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "430:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "430:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "430:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "403:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "412:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "399:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "399:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "424:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "395:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "392:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "454:128:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "469:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "473:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "498:74:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "544:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "555:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "540:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "540:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "564:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "508:31:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "508:64:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "498:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "352:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "363:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "375:6:4",
                "type": ""
              }
            ],
            "src": "305:284:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "672:207:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "718:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "727:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "730:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "720:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "720:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "720:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "693:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "702:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "689:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "689:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "714:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "685:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "685:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "682:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "744:128:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "759:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "773:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "763:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "788:74:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "834:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "845:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "830:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "830:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "854:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "798:31:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "798:64:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "788:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "642:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "653:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "665:6:4",
                "type": ""
              }
            ],
            "src": "595:284:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "950:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "967:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "990:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "972:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "972:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "960:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "960:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "960:37:4"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "938:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "945:3:4",
                "type": ""
              }
            ],
            "src": "885:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1082:74:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1099:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1143:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_1_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1104:38:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1104:45:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1092:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1092:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1092:58:4"
                }
              ]
            },
            "name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1070:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1077:3:4",
                "type": ""
              }
            ],
            "src": "1009:147:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1260:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1270:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1282:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1293:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1278:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1278:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1270:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1350:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1363:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1374:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1359:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1306:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1306:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1232:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1244:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1255:4:4",
                "type": ""
              }
            ],
            "src": "1162:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1496:132:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1506:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1518:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1529:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1514:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1514:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1506:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1594:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1607:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1618:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1603:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1603:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1542:51:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:79:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1542:79:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1468:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1480:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1491:4:4",
                "type": ""
              }
            ],
            "src": "1390:238:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1679:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1689:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1718:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1700:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1700:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1689:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1661:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1671:7:4",
                "type": ""
              }
            ],
            "src": "1634:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1781:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1791:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1802:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1791:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1763:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1773:7:4",
                "type": ""
              }
            ],
            "src": "1736:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1864:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1874:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1889:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1896:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1885:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1885:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1874:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1846:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1856:7:4",
                "type": ""
              }
            ],
            "src": "1819:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1996:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2006:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2017:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2006:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1978:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1988:7:4",
                "type": ""
              }
            ],
            "src": "1951:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2102:53:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2112:37:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2143:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2125:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2125:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2112:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_1_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2082:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2092:9:4",
                "type": ""
              }
            ],
            "src": "2034:121:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2204:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2261:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2270:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2273:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2263:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2263:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2263:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2227:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2252:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2234:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2234:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2224:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2224:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2217:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2217:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2214:2:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2197:5:4",
                "type": ""
              }
            ],
            "src": "2161:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2332:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2389:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2398:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2401:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2391:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2391:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2391:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2355:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2380:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "2362:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2362:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2352:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2352:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2345:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2345:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2342:2:4"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2325:5:4",
                "type": ""
              }
            ],
            "src": "2289:122:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2846:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:4",
                "type": ""
              }
            ],
            "src": "7:143:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:207:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "305:128:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "320:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "324:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "349:74:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "395:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "406:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "391:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "391:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "415:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "359:31:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "359:64:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "349:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:4",
                "type": ""
              }
            ],
            "src": "156:284:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "527:61:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "544:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "575:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "549:25:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "537:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:45:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "537:45:4"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "515:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "522:3:4",
                "type": ""
              }
            ],
            "src": "446:142:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "667:74:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "684:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "728:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_1_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "689:38:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "689:45:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "677:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "677:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "677:58:4"
                }
              ]
            },
            "name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "655:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "662:3:4",
                "type": ""
              }
            ],
            "src": "594:147:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "893:164:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "903:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "969:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "974:2:4",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "910:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "903:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "998:3:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1003:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "994:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "994:11:4"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1007:14:4",
                        "type": "",
                        "value": "Only Manager"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "987:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "987:35:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "987:35:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1032:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1043:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1048:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1039:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1039:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1032:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_04cb169f61212459b56cbb956fb18620aaa771e4595229b1a17ba442c34f140e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "881:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "889:3:4",
                "type": ""
              }
            ],
            "src": "747:310:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1177:140:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1187:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1199:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1210:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1195:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1195:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1187:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1283:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1296:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1307:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1292:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1292:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1223:59:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:87:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1223:87:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1149:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1161:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1172:4:4",
                "type": ""
              }
            ],
            "src": "1063:254:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1429:132:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1439:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1451:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1462:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1447:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1447:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1439:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1527:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1540:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1551:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1536:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1536:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1475:51:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1475:79:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1475:79:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1401:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1413:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1424:4:4",
                "type": ""
              }
            ],
            "src": "1323:238:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1738:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1748:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1760:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1771:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1756:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1756:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1748:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1795:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1806:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1791:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1791:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1814:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1820:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1810:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1810:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1784:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1784:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1784:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1840:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1974:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_04cb169f61212459b56cbb956fb18620aaa771e4595229b1a17ba442c34f140e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1848:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1848:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1840:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04cb169f61212459b56cbb956fb18620aaa771e4595229b1a17ba442c34f140e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1718:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1733:4:4",
                "type": ""
              }
            ],
            "src": "1567:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2088:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2105:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2110:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2098:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2098:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2098:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2126:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2145:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2150:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2141:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2141:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2126:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2060:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2065:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2076:11:4",
                "type": ""
              }
            ],
            "src": "1992:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2212:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2222:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2251:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2233:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2233:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2222:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2194:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2204:7:4",
                "type": ""
              }
            ],
            "src": "2167:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2322:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2332:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2361:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2343:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2343:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2332:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2304:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2314:7:4",
                "type": ""
              }
            ],
            "src": "2269:104:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2424:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2434:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2449:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2456:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2445:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2445:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2434:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2406:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2416:7:4",
                "type": ""
              }
            ],
            "src": "2379:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2556:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2566:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2577:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2566:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2538:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2548:7:4",
                "type": ""
              }
            ],
            "src": "2511:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2662:53:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2672:37:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2703:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2685:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2685:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2672:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_1_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2642:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2652:9:4",
                "type": ""
              }
            ],
            "src": "2594:121:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2764:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2821:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2830:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2833:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2823:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2823:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2823:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2787:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2812:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2794:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2794:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2784:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2784:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2777:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2777:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2774:2:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2757:5:4",
                "type": ""
              }
            ],
            "src": "2721:122:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_stringliteral_04cb169f61212459b56cbb956fb18620aaa771e4595229b1a17ba442c34f140e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n\n        mstore(add(pos, 0), \"Only Manager\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_04cb169f61212459b56cbb956fb18620aaa771e4595229b1a17ba442c34f140e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04cb169f61212459b56cbb956fb18620aaa771e4595229b1a17ba442c34f140e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "551:426:0:-:0;;;593:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;158:10;144:5;;:25;;;;;;;;;;;;;;;;;;623:13;644:42;623:64;;700:6;:13;;;714:1;700:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;692:34;;;727:4;692:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;593:145;;551:426;;7:143:4;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:284::-;;424:2;412:9;403:7;399:23;395:32;392:2;;;440:1;437;430:12;392:2;483:1;508:64;564:7;555:6;544:9;540:22;508:64;:::i;:::-;498:74;;454:128;382:207;;;;:::o;595:284::-;;714:2;702:9;693:7;689:23;685:32;682:2;;;730:1;727;720:12;682:2;773:1;798:64;854:7;845:6;834:9;830:22;798:64;:::i;:::-;788:74;;744:128;672:207;;;;:::o;885:118::-;972:24;990:5;972:24;:::i;:::-;967:3;960:37;950:53;;:::o;1009:147::-;1104:45;1143:5;1104:45;:::i;:::-;1099:3;1092:58;1082:74;;:::o;1162:222::-;;1293:2;1282:9;1278:18;1270:26;;1306:71;1374:1;1363:9;1359:17;1350:6;1306:71;:::i;:::-;1260:124;;;;:::o;1390:238::-;;1529:2;1518:9;1514:18;1506:26;;1542:79;1618:1;1607:9;1603:17;1594:6;1542:79;:::i;:::-;1496:132;;;;:::o;1634:96::-;;1700:24;1718:5;1700:24;:::i;:::-;1689:35;;1679:51;;;:::o;1736:77::-;;1802:5;1791:16;;1781:32;;;:::o;1819:126::-;;1896:42;1889:5;1885:54;1874:65;;1864:81;;;:::o;1951:77::-;;2017:5;2006:16;;1996:32;;;:::o;2034:121::-;;2125:24;2143:5;2125:24;:::i;:::-;2112:37;;2102:53;;;:::o;2161:122::-;2234:24;2252:5;2234:24;:::i;:::-;2227:5;2224:35;2214:2;;2273:1;2270;2263:12;2214:2;2204:79;:::o;2289:122::-;2362:24;2380:5;2362:24;:::i;:::-;2355:5;2352:35;2342:2;;2401:1;2398;2391:12;2342:2;2332:79;:::o;551:426:0:-;;;;;;;",
  "deployedSourceMap": "551:426:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:233;;;:::i;:::-;;87:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;742:233;813:5;;;;;;;;;;801:17;;:10;:17;;;793:26;;;;;;828:13;849:42;828:64;;908:6;:13;;;922:1;908:16;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;900:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:22;:20;:22::i;:::-;742:233;:::o;87:28::-;;;;;;;;;;;;:::o;214:116::-;277:5;;;;;;;;;;265:17;;:10;:17;;;257:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;319:5;;;;;;;;;;306:19;;;7:143:4;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:142::-;549:32;575:5;549:32;:::i;:::-;544:3;537:45;527:61;;:::o;594:147::-;689:45;728:5;689:45;:::i;:::-;684:3;677:58;667:74;;:::o;747:310::-;;910:67;974:2;969:3;910:67;:::i;:::-;903:74;;1007:14;1003:1;998:3;994:11;987:35;1048:2;1043:3;1039:12;1032:19;;893:164;;;:::o;1063:254::-;;1210:2;1199:9;1195:18;1187:26;;1223:87;1307:1;1296:9;1292:17;1283:6;1223:87;:::i;:::-;1177:140;;;;:::o;1323:238::-;;1462:2;1451:9;1447:18;1439:26;;1475:79;1551:1;1540:9;1536:17;1527:6;1475:79;:::i;:::-;1429:132;;;;:::o;1567:419::-;;1771:2;1760:9;1756:18;1748:26;;1820:9;1814:4;1810:20;1806:1;1795:9;1791:17;1784:47;1848:131;1974:4;1848:131;:::i;:::-;1840:139;;1738:248;;;:::o;1992:169::-;;2110:6;2105:3;2098:19;2150:4;2145:3;2141:14;2126:29;;2088:73;;;;:::o;2167:96::-;;2233:24;2251:5;2233:24;:::i;:::-;2222:35;;2212:51;;;:::o;2269:104::-;;2343:24;2361:5;2343:24;:::i;:::-;2332:35;;2322:51;;;:::o;2379:126::-;;2456:42;2449:5;2445:54;2434:65;;2424:81;;;:::o;2511:77::-;;2577:5;2566:16;;2556:32;;;:::o;2594:121::-;;2685:24;2703:5;2685:24;:::i;:::-;2672:37;;2662:53;;;:::o;2721:122::-;2794:24;2812:5;2794:24;:::i;:::-;2787:5;2784:35;2774:2;;2833:1;2830;2823:12;2774:2;2764:79;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.6.0<0.9.0;\ncontract Owner{\n    address payable public owner;\n    constructor(){\n        owner=payable(msg.sender);\n    }\n\n}\ncontract Destructible is Owner{\n  function destroy() public virtual  {\n      require(msg.sender==owner,\"Only Manager\");\n      selfdestruct(owner);\n  }\n}\nabstract contract Config{\n    function lookup(uint id) public virtual returns(address adr);\n}\nabstract contract NameReg{\n    function register(bytes32 name) public virtual;\n    function unregister() public virtual;\n}\n\ncontract Named is Owner ,Destructible{\n   constructor(bytes32 name){\n   Config config=Config(0xD5f9D8D94886E70b06E474c3fB14Fd43E2f23970);\n   NameReg(config.lookup(1)).register(name);\n   }\n   function destroy() public virtual override{\n       require(msg.sender==owner);\n       Config config=Config(0xD5f9D8D94886E70b06E474c3fB14Fd43E2f23970);\n      NameReg(config.lookup(1)).unregister();\n       Destructible.destroy();\n   }\n}\ncontract PriceFeed is Owner,Destructible,Named(\"GoldFeed\"){\n     function updateInfo(uint newInfo) public{\n         require(msg.sender==owner);\n         info=newInfo;\n     }\n     function destroy()public override(Destructible,Named){\n         Named.destroy();\n     }\n     function get( ) public view returns(uint r){\n         return info;\n     }\n     uint info;\n}",
  "sourcePath": "/home/ankitkumar/Desktop/ETHEREUM/Ether/contracts/Owner.sol",
  "ast": {
    "absolutePath": "project:/contracts/Owner.sol",
    "exportedSymbols": {
      "Config": [
        43
      ],
      "Destructible": [
        35
      ],
      "NameReg": [
        52
      ],
      "Named": [
        113
      ],
      "Owner": [
        16
      ],
      "PriceFeed": [
        160
      ]
    },
    "id": 161,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:30:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 16,
        "linearizedBaseContracts": [
          16
        ],
        "name": "Owner",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 16,
            "src": "87:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "87:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14,
              "nodeType": "Block",
              "src": "134:42:0",
              "statements": [
                {
                  "expression": {
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "144:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 9,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "158:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "158:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "150:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "150:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "150:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "144:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 13,
                  "nodeType": "ExpressionStatement",
                  "src": "144:25:0"
                }
              ]
            },
            "id": 15,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "132:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "134:0:0"
            },
            "scope": 16,
            "src": "121:55:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 161,
        "src": "67:112:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17,
              "name": "Owner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16,
              "src": "205:5:0"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "205:5:0"
          }
        ],
        "contractDependencies": [
          16
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 35,
        "linearizedBaseContracts": [
          35,
          16
        ],
        "name": "Destructible",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "249:81:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "265:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "265:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "277:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "265:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79204d616e61676572",
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "283:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04cb169f61212459b56cbb956fb18620aaa771e4595229b1a17ba442c34f140e",
                          "typeString": "literal_string \"Only Manager\""
                        },
                        "value": "Only Manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04cb169f61212459b56cbb956fb18620aaa771e4595229b1a17ba442c34f140e",
                          "typeString": "literal_string \"Only Manager\""
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "257:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "257:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "257:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "319:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 29,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "306:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "306:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "306:19:0"
                }
              ]
            },
            "functionSelector": "83197ef0",
            "id": 34,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "230:2:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:0"
            },
            "scope": 35,
            "src": "214:116:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 161,
        "src": "180:152:0"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 43,
        "linearizedBaseContracts": [
          43
        ],
        "name": "Config",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "0a874df6",
            "id": 42,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lookup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "379:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "378:9:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "adr",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "411:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:13:0"
            },
            "scope": 43,
            "src": "363:61:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 161,
        "src": "333:93:0"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 52,
        "linearizedBaseContracts": [
          52
        ],
        "name": "NameReg",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "e1fa8e84",
            "id": 48,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "476:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "475:14:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:0"
            },
            "scope": 52,
            "src": "458:47:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "functionSelector": "e79a198f",
            "id": 51,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unregister",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "529:2:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:0:0"
            },
            "scope": 52,
            "src": "510:37:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 161,
        "src": "427:122:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53,
              "name": "Owner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16,
              "src": "569:5:0"
            },
            "id": 54,
            "nodeType": "InheritanceSpecifier",
            "src": "569:5:0"
          },
          {
            "baseName": {
              "id": 55,
              "name": "Destructible",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35,
              "src": "576:12:0"
            },
            "id": 56,
            "nodeType": "InheritanceSpecifier",
            "src": "576:12:0"
          }
        ],
        "contractDependencies": [
          16,
          35
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 113,
        "linearizedBaseContracts": [
          113,
          35,
          16
        ],
        "name": "Named",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "618:120:0",
              "statements": [
                {
                  "assignments": [
                    63
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63,
                      "mutability": "mutable",
                      "name": "config",
                      "nodeType": "VariableDeclaration",
                      "scope": 78,
                      "src": "623:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Config_$43",
                        "typeString": "contract Config"
                      },
                      "typeName": {
                        "id": 62,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61,
                          "name": "Config",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43,
                          "src": "623:6:0"
                        },
                        "referencedDeclaration": 43,
                        "src": "623:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Config_$43",
                          "typeString": "contract Config"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307844356639443844393438383645373062303645343734633366423134466434334532663233393730",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "644:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xD5f9D8D94886E70b06E474c3fB14Fd43E2f23970"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64,
                      "name": "Config",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "637:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Config_$43_$",
                        "typeString": "type(contract Config)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Config_$43",
                      "typeString": "contract Config"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "623:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "727:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "714:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 69,
                                "name": "config",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "700:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Config_$43",
                                  "typeString": "contract Config"
                                }
                              },
                              "id": 70,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lookup",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "700:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) external returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "700:16:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 68,
                          "name": "NameReg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "692:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NameReg_$52_$",
                            "typeString": "type(contract NameReg)"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "692:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameReg_$52",
                          "typeString": "contract NameReg"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "692:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "692:40:0"
                }
              ]
            },
            "id": 79,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "605:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "604:14:0"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:0:0"
            },
            "scope": 113,
            "src": "593:145:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              34
            ],
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "784:191:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 84,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "801:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "801:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 86,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "813:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "801:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "793:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "793:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "793:26:0"
                },
                {
                  "assignments": [
                    92
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "config",
                      "nodeType": "VariableDeclaration",
                      "scope": 111,
                      "src": "828:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Config_$43",
                        "typeString": "contract Config"
                      },
                      "typeName": {
                        "id": 91,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90,
                          "name": "Config",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43,
                          "src": "828:6:0"
                        },
                        "referencedDeclaration": 43,
                        "src": "828:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Config_$43",
                          "typeString": "contract Config"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307844356639443844393438383645373062303645343734633366423134466434334532663233393730",
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "849:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xD5f9D8D94886E70b06E474c3fB14Fd43E2f23970"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 93,
                      "name": "Config",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "842:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Config_$43_$",
                        "typeString": "type(contract Config)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "842:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Config_$43",
                      "typeString": "contract Config"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "828:64:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "922:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 98,
                                "name": "config",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "908:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Config_$43",
                                  "typeString": "contract Config"
                                }
                              },
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lookup",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "908:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) external returns (address)"
                              }
                            },
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "908:16:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 97,
                          "name": "NameReg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "900:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NameReg_$52_$",
                            "typeString": "type(contract NameReg)"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "900:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameReg_$52",
                          "typeString": "contract NameReg"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unregister",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "900:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "900:38:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 106,
                        "name": "Destructible",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "947:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Destructible_$35_$",
                          "typeString": "type(contract Destructible)"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "destroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "947:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "947:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "947:22:0"
                }
              ]
            },
            "functionSelector": "83197ef0",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 81,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "776:8:0"
            },
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "758:2:0"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:0:0"
            },
            "scope": 113,
            "src": "742:233:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 161,
        "src": "551:426:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 114,
              "name": "Owner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16,
              "src": "1000:5:0"
            },
            "id": 115,
            "nodeType": "InheritanceSpecifier",
            "src": "1000:5:0"
          },
          {
            "baseName": {
              "id": 116,
              "name": "Destructible",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35,
              "src": "1006:12:0"
            },
            "id": 117,
            "nodeType": "InheritanceSpecifier",
            "src": "1006:12:0"
          },
          {
            "arguments": [
              {
                "hexValue": "476f6c6446656564",
                "id": 119,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1025:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_10238b6e859cdc09a57448829cfd727a59ed31118e9f092468ea3286704e54e0",
                  "typeString": "literal_string \"GoldFeed\""
                },
                "value": "GoldFeed"
              }
            ],
            "baseName": {
              "id": 118,
              "name": "Named",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 113,
              "src": "1019:5:0"
            },
            "id": 120,
            "nodeType": "InheritanceSpecifier",
            "src": "1019:17:0"
          }
        ],
        "contractDependencies": [
          16,
          35,
          113
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 160,
        "linearizedBaseContracts": [
          160,
          113,
          35,
          16
        ],
        "name": "PriceFeed",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "1083:68:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1102:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1102:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 128,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1114:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1102:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1094:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1094:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:26:0"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "info",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "1131:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 133,
                      "name": "newInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "1136:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1131:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1131:12:0"
                }
              ]
            },
            "functionSelector": "316db7f2",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "newInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "1063:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1062:14:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1083:0:0"
            },
            "scope": 160,
            "src": "1043:108:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              34,
              112
            ],
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1210:34:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 143,
                        "name": "Named",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1221:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Named_$113_$",
                          "typeString": "type(contract Named)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "destroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 112,
                      "src": "1221:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1221:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1221:15:0"
                }
              ]
            },
            "functionSelector": "83197ef0",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 141,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 139,
                  "name": "Destructible",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35,
                  "src": "1191:12:0"
                },
                {
                  "id": 140,
                  "name": "Named",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "1204:5:0"
                }
              ],
              "src": "1182:28:0"
            },
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1173:2:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:0"
            },
            "scope": 160,
            "src": "1157:87:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1293:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 154,
                    "name": "info",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 159,
                    "src": "1311:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 153,
                  "id": 155,
                  "nodeType": "Return",
                  "src": "1304:11:0"
                }
              ]
            },
            "functionSelector": "6d4ce63c",
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1262:3:0"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1286:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:8:0"
            },
            "scope": 160,
            "src": "1250:73:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 159,
            "mutability": "mutable",
            "name": "info",
            "nodeType": "VariableDeclaration",
            "scope": 160,
            "src": "1329:9:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 158,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1329:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "scope": 161,
        "src": "978:363:0"
      }
    ],
    "src": "36:1305:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Owner.sol",
    "exportedSymbols": {
      "Config": [
        43
      ],
      "Destructible": [
        35
      ],
      "NameReg": [
        52
      ],
      "Named": [
        113
      ],
      "Owner": [
        16
      ],
      "PriceFeed": [
        160
      ]
    },
    "id": 161,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:30:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 16,
        "linearizedBaseContracts": [
          16
        ],
        "name": "Owner",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 16,
            "src": "87:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "87:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14,
              "nodeType": "Block",
              "src": "134:42:0",
              "statements": [
                {
                  "expression": {
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "144:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 9,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "158:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "158:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "150:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "150:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "150:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "144:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 13,
                  "nodeType": "ExpressionStatement",
                  "src": "144:25:0"
                }
              ]
            },
            "id": 15,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "132:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "134:0:0"
            },
            "scope": 16,
            "src": "121:55:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 161,
        "src": "67:112:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17,
              "name": "Owner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16,
              "src": "205:5:0"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "205:5:0"
          }
        ],
        "contractDependencies": [
          16
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 35,
        "linearizedBaseContracts": [
          35,
          16
        ],
        "name": "Destructible",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "249:81:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "265:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "265:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "277:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "265:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79204d616e61676572",
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "283:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04cb169f61212459b56cbb956fb18620aaa771e4595229b1a17ba442c34f140e",
                          "typeString": "literal_string \"Only Manager\""
                        },
                        "value": "Only Manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04cb169f61212459b56cbb956fb18620aaa771e4595229b1a17ba442c34f140e",
                          "typeString": "literal_string \"Only Manager\""
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "257:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "257:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "257:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "319:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 29,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "306:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "306:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "306:19:0"
                }
              ]
            },
            "functionSelector": "83197ef0",
            "id": 34,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "230:2:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:0"
            },
            "scope": 35,
            "src": "214:116:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 161,
        "src": "180:152:0"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 43,
        "linearizedBaseContracts": [
          43
        ],
        "name": "Config",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "0a874df6",
            "id": 42,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lookup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "379:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "378:9:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "adr",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "411:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:13:0"
            },
            "scope": 43,
            "src": "363:61:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 161,
        "src": "333:93:0"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 52,
        "linearizedBaseContracts": [
          52
        ],
        "name": "NameReg",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "e1fa8e84",
            "id": 48,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "476:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "475:14:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:0"
            },
            "scope": 52,
            "src": "458:47:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "functionSelector": "e79a198f",
            "id": 51,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unregister",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "529:2:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:0:0"
            },
            "scope": 52,
            "src": "510:37:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 161,
        "src": "427:122:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53,
              "name": "Owner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16,
              "src": "569:5:0"
            },
            "id": 54,
            "nodeType": "InheritanceSpecifier",
            "src": "569:5:0"
          },
          {
            "baseName": {
              "id": 55,
              "name": "Destructible",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35,
              "src": "576:12:0"
            },
            "id": 56,
            "nodeType": "InheritanceSpecifier",
            "src": "576:12:0"
          }
        ],
        "contractDependencies": [
          16,
          35
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 113,
        "linearizedBaseContracts": [
          113,
          35,
          16
        ],
        "name": "Named",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "618:120:0",
              "statements": [
                {
                  "assignments": [
                    63
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63,
                      "mutability": "mutable",
                      "name": "config",
                      "nodeType": "VariableDeclaration",
                      "scope": 78,
                      "src": "623:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Config_$43",
                        "typeString": "contract Config"
                      },
                      "typeName": {
                        "id": 62,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61,
                          "name": "Config",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43,
                          "src": "623:6:0"
                        },
                        "referencedDeclaration": 43,
                        "src": "623:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Config_$43",
                          "typeString": "contract Config"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307844356639443844393438383645373062303645343734633366423134466434334532663233393730",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "644:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xD5f9D8D94886E70b06E474c3fB14Fd43E2f23970"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64,
                      "name": "Config",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "637:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Config_$43_$",
                        "typeString": "type(contract Config)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Config_$43",
                      "typeString": "contract Config"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "623:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "727:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "714:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 69,
                                "name": "config",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "700:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Config_$43",
                                  "typeString": "contract Config"
                                }
                              },
                              "id": 70,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lookup",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "700:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) external returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "700:16:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 68,
                          "name": "NameReg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "692:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NameReg_$52_$",
                            "typeString": "type(contract NameReg)"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "692:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameReg_$52",
                          "typeString": "contract NameReg"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "692:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "692:40:0"
                }
              ]
            },
            "id": 79,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "605:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "604:14:0"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:0:0"
            },
            "scope": 113,
            "src": "593:145:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              34
            ],
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "784:191:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 84,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "801:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "801:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 86,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "813:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "801:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "793:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "793:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "793:26:0"
                },
                {
                  "assignments": [
                    92
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "config",
                      "nodeType": "VariableDeclaration",
                      "scope": 111,
                      "src": "828:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Config_$43",
                        "typeString": "contract Config"
                      },
                      "typeName": {
                        "id": 91,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 90,
                          "name": "Config",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43,
                          "src": "828:6:0"
                        },
                        "referencedDeclaration": 43,
                        "src": "828:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Config_$43",
                          "typeString": "contract Config"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 96,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307844356639443844393438383645373062303645343734633366423134466434334532663233393730",
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "849:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xD5f9D8D94886E70b06E474c3fB14Fd43E2f23970"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 93,
                      "name": "Config",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "842:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Config_$43_$",
                        "typeString": "type(contract Config)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "842:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Config_$43",
                      "typeString": "contract Config"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "828:64:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "922:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 98,
                                "name": "config",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "908:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Config_$43",
                                  "typeString": "contract Config"
                                }
                              },
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lookup",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "908:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) external returns (address)"
                              }
                            },
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "908:16:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 97,
                          "name": "NameReg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "900:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NameReg_$52_$",
                            "typeString": "type(contract NameReg)"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "900:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameReg_$52",
                          "typeString": "contract NameReg"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unregister",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "900:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "900:38:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 106,
                        "name": "Destructible",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "947:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Destructible_$35_$",
                          "typeString": "type(contract Destructible)"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "destroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "947:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "947:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "947:22:0"
                }
              ]
            },
            "functionSelector": "83197ef0",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 81,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "776:8:0"
            },
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "758:2:0"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:0:0"
            },
            "scope": 113,
            "src": "742:233:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 161,
        "src": "551:426:0"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 114,
              "name": "Owner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16,
              "src": "1000:5:0"
            },
            "id": 115,
            "nodeType": "InheritanceSpecifier",
            "src": "1000:5:0"
          },
          {
            "baseName": {
              "id": 116,
              "name": "Destructible",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35,
              "src": "1006:12:0"
            },
            "id": 117,
            "nodeType": "InheritanceSpecifier",
            "src": "1006:12:0"
          },
          {
            "arguments": [
              {
                "hexValue": "476f6c6446656564",
                "id": 119,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1025:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_10238b6e859cdc09a57448829cfd727a59ed31118e9f092468ea3286704e54e0",
                  "typeString": "literal_string \"GoldFeed\""
                },
                "value": "GoldFeed"
              }
            ],
            "baseName": {
              "id": 118,
              "name": "Named",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 113,
              "src": "1019:5:0"
            },
            "id": 120,
            "nodeType": "InheritanceSpecifier",
            "src": "1019:17:0"
          }
        ],
        "contractDependencies": [
          16,
          35,
          113
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 160,
        "linearizedBaseContracts": [
          160,
          113,
          35,
          16
        ],
        "name": "PriceFeed",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "1083:68:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1102:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1102:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 128,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1114:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1102:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1094:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1094:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:26:0"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "info",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "1131:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 133,
                      "name": "newInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "1136:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1131:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1131:12:0"
                }
              ]
            },
            "functionSelector": "316db7f2",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "newInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "1063:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1062:14:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1083:0:0"
            },
            "scope": 160,
            "src": "1043:108:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              34,
              112
            ],
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1210:34:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 143,
                        "name": "Named",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1221:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Named_$113_$",
                          "typeString": "type(contract Named)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "destroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 112,
                      "src": "1221:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1221:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1221:15:0"
                }
              ]
            },
            "functionSelector": "83197ef0",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 141,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 139,
                  "name": "Destructible",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35,
                  "src": "1191:12:0"
                },
                {
                  "id": 140,
                  "name": "Named",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "1204:5:0"
                }
              ],
              "src": "1182:28:0"
            },
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1173:2:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:0"
            },
            "scope": 160,
            "src": "1157:87:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1293:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 154,
                    "name": "info",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 159,
                    "src": "1311:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 153,
                  "id": 155,
                  "nodeType": "Return",
                  "src": "1304:11:0"
                }
              ]
            },
            "functionSelector": "6d4ce63c",
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1262:3:0"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1286:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:8:0"
            },
            "scope": 160,
            "src": "1250:73:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 159,
            "mutability": "mutable",
            "name": "info",
            "nodeType": "VariableDeclaration",
            "scope": 160,
            "src": "1329:9:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 158,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1329:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "scope": 161,
        "src": "978:363:0"
      }
    ],
    "src": "36:1305:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-15T05:58:52.624Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}